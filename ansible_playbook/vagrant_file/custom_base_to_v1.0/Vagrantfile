# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "_INPUT_VM_NAME"

  # Proxyê›íË
  if Vagrant.has_plugin?("vagrant-proxyconf")
   config.proxy.http = "http://10.161.129.10:9515/"
   config.proxy.https = "http://10.161.129.10:9515/"
   config.proxy.no_proxy = "localhost,127.0.0.1"
  end
  
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
  
    # local setting
    cp -p /etc/sysconfig/i18n /etc/sysconfig/i18n.org
    sed -i -e "s/de_DE.UTF-8/ja_JP.UTF-8/g" /etc/sysconfig/i18n
    . /etc/sysconfig/i18n
    
    # TimeZone setting
    cp -p /etc/localtime /etc/localtime.org
    ln -sf  /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
    cp -p /etc/sysconfig/clock /etc/sysconfig/clock.org
    sed -i -e "s:Europe/Berlin:Asia/Tokyo:g" /etc/sysconfig/i18n
    
    # SELINUX disabled
    cp -p /etc/selinux/config /etc/selinux/config.org
    sed -i -e "s:SELINUX=enforcing:SELINUX=disabled:g" /etc/selinux/config
    
    # yum setting
    cp -p /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.org
    sed -i -e "s/mirrorlist=/#mirrorlist_co=/g" /etc/yum.repos.d/CentOS-Base.repo
    sed -i -e "s/#baseurl=/baseurl=/g" /etc/yum.repos.d/CentOS-Base.repo
    yum install -y man
    yum install -y man-pages.noarch
    yum install -y man-pages-ja.noarch
  SHELL
  
  #####################
  # ÉTÅ[Éoê›íË
  #####################
  config.vm.define :_NODE_NAME do |_NODE_NAME|
    _NODE_NAME.vm.hostname = "_NODE_NAME"
    #_NODE_NAME.vm.network :private_network, ip: "192.168.33.10"

  end
end
