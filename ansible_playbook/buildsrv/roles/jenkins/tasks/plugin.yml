--- 
# JenkinsPlugin Install Setting 
- name: Get Jenkins CLI を取得します。
  get_url: url={{ jenkins_cli_url }} dest={{ jenkins_cli_dest }}
  register: result
  until: result.msg.find("Request failed") == -1
  retries: 5
  delay: 10
  tags:
    - jenkins
    - plugin

- name: Jenkins updates directoryを生成します。
  file: 
    path: "{{ jenkins_updates_dir }}"
    state: directory
    mode: 0755
  tags:
    - jenkins
    - plugin

- name: Jenkins Plugin UpdateFileを取得します。
  shell: >
    curl -L {{ jenkins_updates_center_url }} | sed '1d;$d' > {{ jenkins_updates_json_path }}
    creates={{ jenkins_updates_json_path }}
  tags:
    - jenkins
    - plugin

- name: Jenkins updates directory所有者変更
  file: 
    path: "{{ jenkins_updates_dir }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: 0755
  tags:
    - jenkins
    - plugin

- name: UpdateFile所有者変更
  file: 
    path: "{{ jenkins_updates_json_path }}"
    mode: 0644
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
  tags:
    - jenkins
    - plugin
 
# Jenkins Restart
- name: Jenkinsをリスタートします。
  service: name=jenkins state=restarted enabled=yes
  tags:
    - jenkins
    - plugin

- name: Jenkins port{{ jenkins_port }} 有効化まで待機します。
  wait_for: port={{ jenkins_port }} timeout=60
  tags:
    - jenkins
    - plugin
    
- name: Jenkinsサービス有効まで待機します。
  shell: curl -o /dev/null -w %{http_code} {{ my_jenkins_params.url }}/ 2> /dev/null
  register: result
  until: result.stdout.find('403') != -1
  retries: 20
  delay: 3
  changed_when: false
  tags:
    - jenkins
    - plugin
        
# JenkinsPlugin Install
- name: JenkinsPlugin をインストール
  jenkins_plugin:
    name: "{{ item }}"
    with_dependencies: yes
    params: "{{ my_jenkins_params }}"
  with_items: "{{ jenkins_plugins }}"
  ignore_errors: True
  tags:
    - jenkins
    - plugin

# Jenkins Plugin Settings
- name: プラグイン初期設定済みファイルを配備
  unarchive: 
    src: "{{ jenkins_initConfig_file }}"
    dest: "{{ jenkins_parent_dir }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
  tags:
    - jenkins
    - plugin

# Jenkins Restart
- name: Jenkinsをリロードします。
  service: name=jenkins state=reloaded enabled=yes
  tags:
    - jenkins
    - plugin
    
- name: Jenkinsをリスタートします。
  service: name=jenkins state=restarted enabled=yes
  tags:
    - jenkins
    - plugin

- name: Jenkins port{{ jenkins_port }} 有効化まで待機します。
  wait_for: port={{ jenkins_port }} timeout=60
  tags:
    - jenkins
    - plugin
    
- name: Jenkinsサービス有効まで待機します。
  shell: curl -o /dev/null -w %{http_code} {{ my_jenkins_params.url }}/ 2> /dev/null
  register: result
  until: result.stdout.find('403') != -1
  retries: 20
  delay: 3
  changed_when: false
  tags:
    - jenkins
    - plugin
    
